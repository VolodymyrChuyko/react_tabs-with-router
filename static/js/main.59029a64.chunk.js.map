{"version":3,"sources":["components/Navbar/NavBar.tsx","components/HomePage/HomePage.tsx","components/Tabs/Tabs.tsx","components/TabsPage/TabsPage.tsx","utils/getTabByID.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["NavBar","className","to","isActive","classNames","end","HomePage","Tabs","tabs","tabId","useParams","map","id","title","content","TabsPage","selectedTab","useMemo","find","tab","getTabByID","PageNotFound","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAmB,WAC9B,OACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OACTC,IACE,cACA,CAAE,YAAaD,KAGnBE,KAAG,EARL,kBAaA,cAAC,IAAD,CACEH,GAAG,QACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OACTC,IACE,cACA,CAAE,YAAaD,KALrB,0BCxBGG,EAAqB,WAChC,OACE,oBAAIL,UAAU,QAAd,wB,OCMSM,EAAwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC9BC,EAAUC,cAAVD,MAER,OACE,qBAAKR,UAAU,gBAAf,SACE,6BACGO,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,oBAEEZ,UAAWG,IACT,CAAE,YAAaQ,IAAOH,IAExB,UAAQ,MALV,SAOE,cAAC,IAAD,CACEP,GAAE,gBAAWU,GACb,UAAQ,UAFV,SAIGC,KAVED,WCXXJ,EAAO,CACX,CAAEI,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAqB,WAChC,MAAuBL,cAAfD,aAAR,MAAgB,GAAhB,EACMO,EAAcC,mBAAQ,WAC1B,OCZsB,SAACT,EAAaC,GACtC,OAAOD,EAAKU,MAAK,SAAAC,GAAG,OAAIA,EAAIP,KAAOH,MAAU,KDWpCW,CAAWZ,EAAMC,KACvB,CAACA,IAEJ,OACE,qCACE,oBAAIR,UAAU,QAAd,uBAEA,sBAAK,UAAQ,gBAAb,UACE,cAAC,EAAD,CACEO,KAAMA,IAGPQ,EAEG,qBAAKf,UAAU,QAAQ,UAAQ,aAA/B,SACGe,EAAYF,UAIf,qBAAKb,UAAU,QAAQ,UAAQ,aAA/B,wCEjCCoB,EAAyB,WACpC,OACE,oBAAIpB,UAAU,QAAd,6BCSSqB,EAAM,kBACjB,qCAGE,cAAC,EAAD,IAEA,qBAAKrB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUtB,GAAG,QAC1C,eAAC,IAAD,CAAOqB,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,iBCtBnCE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.59029a64.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => (\n              classNames(\n                'navbar-item',\n                { 'is-active': isActive },\n              )\n            )}\n            end\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/tabs\"\n            className={({ isActive }) => (\n              classNames(\n                'navbar-item',\n                { 'is-active': isActive },\n              )\n            )}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n};\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams();\n\n  return (\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map(({ id, title }) => (\n          <li\n            key={id}\n            className={classNames(\n              { 'is-active': id === tabId },\n            )}\n            data-cy=\"Tab\"\n          >\n            <Link\n              to={`/tabs/${id}`}\n              data-cy=\"TabLink\"\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getTabByID } from '../../utils/getTabByID';\nimport { Tabs } from '../Tabs';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: React.FC = () => {\n  const { tabId = '' } = useParams();\n  const selectedTab = useMemo(() => {\n    return getTabByID(tabs, tabId);\n  }, [tabId]);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div data-cy=\"TabsComponent\">\n        <Tabs\n          tabs={tabs}\n        />\n\n        {selectedTab\n          ? (\n            <div className=\"block\" data-cy=\"TabContent\">\n              {selectedTab.content}\n            </div>\n          )\n          : (\n            <div className=\"block\" data-cy=\"TabContent\">\n              Please select a tab\n            </div>\n          )}\n      </div>\n    </>\n  );\n};\n","import { Tab } from '../types/Tab';\n\nexport const getTabByID = (tabs: Tab[], tabId: string) => {\n  return tabs.find(tab => tab.id === tabId) || null;\n};\n","export const PageNotFound: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { NavBar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport { TabsPage } from './components/TabsPage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n\n    <NavBar />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}